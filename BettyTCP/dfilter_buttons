# This file is automatically generated, DO NOT MODIFY.
"TRUE","Stream","tcp.stream == ${tcp.stream}",""
"TRUE","Latency","tcp.time_delta >.5 && tcp.flags.fin == 0 && tcp.flags.reset == 0 ","TCP Delta greater than half of a second. Removed FINs and RSTs."
"TRUE","By Address//IP 10-10","ip.src == 10.0.0.0/8 and ip.dst == 10.0.0.0/8","Traffic staying within the subnet"
"TRUE","By Address//IP 10-***","!(ip.src == 10.0.0.0/8 and ip.dst == 10.0.0.0/8)","Traffic leaving the subnet"
"TRUE","Handshake//SYN || SYN/ACK","tcp.flags.syn == 1",""
"TRUE","Handshake//SYN","tcp.flags.syn == 1 and tcp.flags.ack==0",""
"TRUE","Handshake//SYN/ACK","tcp.flags.syn == 1 and tcp.flags.ack==1",""
"TRUE","Handshake//All 3 Packets of Handshake","tcp.flags.syn eq 1 or (tcp.flags eq 0x010 and tcp.len eq 0 and tcp.seq eq 1 eq tcp.nxtseq eq 1 and tcp.ack eq 1)","All 3 pieces of the handshake.  The last ack has no additional flags or data, and the SEQ, NxtSEQ and ACK numbers must all be one.  Great to find retransmissions (red) in the handshakes. "
"TRUE","Handshake//Unexpected Handshake Options//Server no SACK_Perm","tcp.flags.syn == 1 and tcp.flags.ack==1 and not tcp.options.sack_perm","Server that doesn't support selective acks"
"TRUE","Handshake//Unexpected Handshake Options//Server WinScale 1","tcp.options.wscale.multiplier eq 1 and tcp.flags.ack and tcp.flags.syn eq 1","Servers should have higher scale factor than 1 - possible resource issue"
"TRUE","Retrans//Packet Loss//Retransmissions","(tcp.analysis.retransmission) && !(tcp.flags.fin == 1)","Goal - get a percentage in the status bar of packet loss.  FIN packets are filtered out because they don't matter if they are retransmitted, the conversation was already over. "
"TRUE","Retrans//Packet Loss//Spurious Retransmission","tcp.analysis.spurious_retransmission","The ACK for a packet was dropped so the Sender retransmitts. Wireshark has seen the transmission, ACK and retransmission so it marks it superfluous.  If the capture had been taken at the Sender, only the transmission and retransmission would be seen."
"TRUE","Retrans//Packet Loss//Server SYN/ACK Retransmit","(tcp.flags.syn == 1 and tcp.analysis.retransmission) && (tcp.flags.ack == 1)","Goal: How many times the server response to SYN has to be retransmitted. Is it normal packet loss or is it firewall drops?"
"TRUE","Retrans//Packet Loss or Dropped by Firewall//SYN Retransmission","(tcp.flags.syn == 1 and tcp.analysis.retransmission) && (tcp.flags.ack == 0)","Goal - does the clent have to retrans - is it normal loss, or server overload or firewall overload"
"TRUE","Retrans//Packet Loss or Dropped by Firewall//Handshake Retransmit SYN || SYNACK","tcp.flags.syn == 1 and tcp.analysis.retransmission",""
"TRUE","Window Size//Small Window","tcp.window_size lt 1260 && tcp.window_size gt 0 && !tcp.window_size_scalefactor == -1 && tcp.flags.fin == 0 && tcp.flags.reset == 0",""
"TRUE","Window Size//ZeroWindow Fault Isolation For Selected Stream","tcp.stream == ${tcp.stream} and (tcp.analysis.window_full or tcp.analysis.zero_window)","Look at the time between the window full and zero window. If it is microseconds, it is probably the application not taking the data and TCP is aware.  If it is 200 milliseconds or whatever the default TCP ACK Wait timer for your environment, it is probably a resource issue because TCP was not aware."
"TRUE","Window Size//ZeroWindow Fault Isolation","tcp.analysis.window_full or tcp.analysis.zero_window","Look at the time between the window full and zero window. If it is microseconds, it is probably the application not taking the data and TCP is aware.  If it is 200 milliseconds or whatever the default TCP ACK Wait timer for your environment, it is probably a resource issue because TCP was not aware."
"TRUE","Window Size//ZeroWindow","tcp.analysis.zero_window","You can't send data if I tell you my window size is zero, you just have to back off and wait patiently until I send a Window Update.  Who is the source? It is their fault (either lack of resources or software not pulling up the data)."
"TRUE","Window Size//WinZero Recovery For Selected Stream","tcp.stream == ${tcp.stream} and (tcp.analysis.window_update or tcp.analysis.zero_window)","How long before the Window Update?"
"TRUE","Window Size//WinZero Recovery","tcp.analysis.window_update or tcp.analysis.zero_window","How long before the Window Update?"
"TRUE","Window Size//Server WinScale 1","tcp.options.wscale.multiplier eq 1 and tcp.flags.ack and tcp.flags.syn eq 1","Servers should have higher scale factor than 1 - possible resource issue"
"TRUE","Reset//Reset","tcp.flags.reset eq 1",""
"TRUE","Reset//Reset Response to SYN","tcp.flags.reset==1 and tcp.seq in {0 1} and tcp.ack in {0 1}","Resets for Syn"
"TRUE","Expert Errors","tcp.analysis.flags",""
"TRUE","General//Time Range","frame.time gt \x22Oct 18, 2018 12:50:00\x22 and frame.time lt \x22Oct 18, 2018 12:59:00\x22",""
"TRUE","General//Ether OUI","eth.addr_resolved contains \x22Cisco_\x22","Goal: filter for one type of MAC address"
"TRUE","General//Noise","stp or cdp or lldp or ssdp or nbns or afp or arp or llmnr or mdns or udp.dstport in {17500}","Goal - see the noise | broadcast | multicast - stp|cdp|lldp|ssdp|nbns|afp|arp|llmnr|mdns|DropboxSync"
"TRUE","General//No Noise","not (stp or cdp or lldp or ssdp or nbns or afp or arp or llmnr or mdns or udp.dstport in {17500})","Goal - filter out the noise | broadcast | multicast - stp|cdp|lldp|ssdp|nbns|afp|arp|llmnr|mdns|DropboxSync"
"TRUE","By Address//Same Country IPv4","ip.geoip.country_iso == ${ip.geoip.country_iso}","Same Country as selected packet"
